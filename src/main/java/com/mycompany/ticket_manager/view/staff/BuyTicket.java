/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ticket_manager.view.staff;

import com.mycompany.ticket_manager.controller.CalendarController;
import com.mycompany.ticket_manager.controller.MovieController;
import com.mycompany.ticket_manager.controller.SeatController;
import com.mycompany.ticket_manager.controller.TicketController;
import com.mycompany.ticket_manager.model.CurrentStaff;
import com.mycompany.ticket_manager.model.Response;
import com.mycompany.ticket_manager.model.Ticket;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author chien
 */
public class BuyTicket extends javax.swing.JFrame {

    MovieController movieController;
    TicketController ticketController;
    CalendarController calendarController;
    SeatController seatController;
    List<Map<String, String>> listMovie = new ArrayList<>();
    List<Map<String, String>> listCalendar = new ArrayList<>();
    List<String> listSelectedChair = new ArrayList<>();
    Boolean eventPlaying = false;
    Map<String, Object> priceChairsMap = new HashMap<>();
    Map<String, Object> pricePopcornMap = new HashMap<>();
    Map<String, Object> priceWaterMap = new HashMap<>();
    CurrentStaff currentStaff;
    Boolean openPayment = false;

    /**
     * Creates new form Main
     */
    public BuyTicket(CurrentStaff currentStaff) {
        initComponents();
        this.currentStaff = currentStaff;
        this.movieController = new MovieController();
        this.calendarController = new CalendarController();
        this.ticketController = new TicketController();
        this.seatController = new SeatController();
        this.listSelectedChair = new ArrayList<>();
        this.date.setDate(new Date());
        this.handleChangeDate();
        this.setEvents();
        this.visiableNote(false);
    }

    private void setEvents() {
        chairs.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                changeChairs();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                changeChairs();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        date = new com.toedter.calendar.JDateChooser();
        chooseChair = new javax.swing.JButton();
        movie_combobox = new javax.swing.JComboBox<>();
        calendar_combobox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        remaining = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        priceChair = new javax.swing.JLabel();
        chairs = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        popcorn = new javax.swing.JSpinner();
        pricePopcorn = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        water = new javax.swing.JSpinner();
        priceWater = new javax.swing.JLabel();
        payment = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        frameChooseChairs = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        note1 = new javax.swing.JButton();
        note2 = new javax.swing.JButton();
        note3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                changeDate(evt);
            }
        });

        chooseChair.setBackground(new java.awt.Color(253, 152, 67));
        chooseChair.setText("Chọn ghế");
        chooseChair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickChooseChair(evt);
            }
        });

        movie_combobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                changeMovie(evt);
            }
        });

        calendar_combobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                changeCalendar(evt);
            }
        });

        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        remaining.setText(" ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel2.setText("Tra cứu phim");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(chooseChair)
                            .addGap(18, 18, 18)
                            .addComponent(remaining, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(movie_combobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(calendar_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(movie_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(calendar_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chooseChair)
                            .addComponent(remaining)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel3.setText("Khách hàng");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel4.setText("Tên khách hàng");

        name.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        name.setPreferredSize(new java.awt.Dimension(64, 28));

        email.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        email.setPreferredSize(new java.awt.Dimension(64, 28));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel5.setText("Email");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel6.setText("Chỗ ngồi");

        priceChair.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        priceChair.setText("0 đ");

        chairs.setEditable(false);
        chairs.setBorder(null);
        chairs.setPreferredSize(new java.awt.Dimension(64, 28));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel8.setText("Dịch vụ khác");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel9.setText(" Bỏng ngô");

        popcorn.setMinimumSize(new java.awt.Dimension(64, 28));
        popcorn.setPreferredSize(new java.awt.Dimension(64, 28));
        popcorn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changePopcorn(evt);
            }
        });

        pricePopcorn.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        pricePopcorn.setText("0 đ");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel11.setText("Nước ngọt");

        water.setMinimumSize(new java.awt.Dimension(64, 28));
        water.setPreferredSize(new java.awt.Dimension(64, 28));
        water.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeWater(evt);
            }
        });

        priceWater.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        priceWater.setText("0 đ");

        payment.setBackground(new java.awt.Color(61, 213, 243));
        payment.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        payment.setText("Thanh toán");
        payment.setPreferredSize(new java.awt.Dimension(92, 30));
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickPayment(evt);
            }
        });

        clear.setBackground(java.awt.Color.yellow);
        clear.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        clear.setText("Làm mới");
        clear.setPreferredSize(new java.awt.Dimension(80, 30));
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickClear(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jLabel3))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel6))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(jLabel8))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(chairs, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(priceChair, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(water, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(priceWater, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(popcorn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(pricePopcorn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(14, 14, 14)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceChair)
                    .addComponent(chairs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(popcorn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pricePopcorn))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(water, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceWater))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout frameChooseChairsLayout = new javax.swing.GroupLayout(frameChooseChairs);
        frameChooseChairs.setLayout(frameChooseChairsLayout);
        frameChooseChairsLayout.setHorizontalGroup(
            frameChooseChairsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 616, Short.MAX_VALUE)
        );
        frameChooseChairsLayout.setVerticalGroup(
            frameChooseChairsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 349, Short.MAX_VALUE)
        );

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Màn hình");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jButton2)
                .addGap(0, 76, Short.MAX_VALUE))
        );

        note1.setBackground(new java.awt.Color(255, 51, 51));
        note1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        note1.setForeground(new java.awt.Color(255, 255, 255));
        note1.setText("Đã mua");

        note2.setBackground(new java.awt.Color(51, 102, 255));
        note2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        note2.setForeground(new java.awt.Color(255, 255, 255));
        note2.setText("Đang chọn");

        note3.setBackground(new java.awt.Color(51, 255, 51));
        note3.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        note3.setForeground(new java.awt.Color(255, 255, 255));
        note3.setText("Ghế trống");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(frameChooseChairs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(note1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(note2)
                        .addGap(31, 31, 31)
                        .addComponent(note3)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frameChooseChairs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(note2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(note1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(note3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clickChooseChair(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clickChooseChair
        // TODO add your handling code here:
        int calendarIndex = this.calendar_combobox.getSelectedIndex();
        if (calendarIndex <= 0) {
            return;
        }
        Response<List<String>> response = this.seatController.getAllChairBoughtOfCalendar(this.listCalendar.get(calendarIndex).get("id"));
        if (response.getSuccess() == false) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Thông báo lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        this.showChooseChairs(response.getData());
    }//GEN-LAST:event_clickChooseChair

    private void changeDate(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_changeDate
        // TODO add your handling code here:
        this.handleChangeDate();

    }//GEN-LAST:event_changeDate

    private void changeChairs() {
        if (eventPlaying == true) {
            return;
        }
        eventPlaying = true;

        SwingUtilities.invokeLater(() -> {
            eventPlaying = false;
        });

        Response<Map<String, Object>> response = this.ticketController.getPriceChairs(this.listSelectedChair, this.listMovie.get(this.movie_combobox.getSelectedIndex()).get("id"));
        if (response.getSuccess() == false) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Thông báo lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }
        this.priceChairsMap = response.getData();
        this.priceChair.setText(response.getData().get("str").toString());
    }

    private void handleChangeDate() {
        this.clearChooseChairs();
        long date = 0;
        try {
            date = this.date.getDate().getTime() / 1000;
        } catch (Exception e) {
            date = 0;
        }

        if (date == 0) {
            return;
        }

        Response<List<Map<String, String>>> response = this.movieController.getMovieInDate(date);
        if (response.getSuccess() == false) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Thông báo lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        this.listMovie = response.getData();
        this.pushListPhim();
    }
    private void changeMovie(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_changeMovie
        // TODO add your handling code here:
        this.clearChooseChairs();
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            return;
        }
        int selected = this.movie_combobox.getSelectedIndex();
        if (selected <= 0) {
            this.calendar_combobox.removeAllItems();
            return;
        }
        Response<List<Map<String, String>>> response = this.calendarController.getCalendarMovie(this.listMovie.get(selected).get("id"), this.date.getDate().getTime() / 1000);
        if (response.getSuccess() == false) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Thông báo lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        this.listCalendar = response.getData();
        this.pushListCalendar();
    }//GEN-LAST:event_changeMovie

    private void changeCalendar(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_changeCalendar
        // TODO add your handling code here:
        this.clearChooseChairs();
        int indexCalendar = calendar_combobox.getSelectedIndex();
        if (evt.getStateChange() == ItemEvent.DESELECTED || indexCalendar <= 0) {
            return;
        }
        Response<String> response = this.calendarController.getRemaingTime(this.listCalendar.get(indexCalendar).get("id"));
        if (response.getSuccess() == false) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Thông báo lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String remaining = response.getData();

        if (remaining.contains("/")) {
            this.remaining.setForeground(Color.red);
        } else {
            this.remaining.setForeground(Color.green);
        }
        this.remaining.setText(remaining);
    }//GEN-LAST:event_changeCalendar

    private void changePopcorn(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_changePopcorn
        // TODO add your handling code here:
        int popcorn = (int) this.popcorn.getValue();
        if (popcorn < 0 || popcorn > 100) {
            this.popcorn.setValue(0);
            popcorn = 0;
        }

        Response<Map<String, Object>> response = this.ticketController.getPricePopcorn(popcorn);
        if (response.getSuccess() == false) {
            if (popcorn != 0) {
                this.popcorn.setValue(0);
            }
            JOptionPane.showMessageDialog(null, response.getMessage(), "Thông báo lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }
        this.pricePopcornMap = response.getData();

        this.pricePopcorn.setText(response.getData().get("str").toString());

    }//GEN-LAST:event_changePopcorn

    private void changeWater(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_changeWater
        // TODO add your handling code here:
        int water = (int) this.water.getValue();
        if (water < 0 || water > 100) {
            this.water.setValue(0);
            water = 0;
        }

        Response<Map<String, Object>> response = this.ticketController.getPriceWater(water);
        if (response.getSuccess() == false) {
            if (water != 0) {
                this.water.setValue(0);
            }
            JOptionPane.showMessageDialog(null, response.getMessage(), "Thông báo lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }
        this.priceWaterMap = response.getData();
        this.priceWater.setText(response.getData().get("str").toString());
    }//GEN-LAST:event_changeWater

    private void clickPayment(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clickPayment
        // TODO add your handling code here:
        try {
            Object priceChairs = (this.priceChairsMap.get("num") != null) ? this.priceChairsMap.get("num") : 0;
            Object pricePopcorn = (this.pricePopcornMap.get("num") != null) ? this.pricePopcornMap.get("num") : 0;
            Object priceWater = (this.priceWaterMap.get("num") != null) ? this.priceWaterMap.get("num") : 0;
            Ticket ticket = new Ticket(this.name.getText(), this.email.getText(), this.listCalendar.get(this.calendar_combobox.getSelectedIndex()).get("id"), this.listSelectedChair.size(), (int) this.popcorn.getValue(), (int) this.water.getValue(), (int) priceChairs, (int) pricePopcorn, (int) priceWater, this.currentStaff.getId());
            Response<Ticket> response = this.ticketController.checkInfo(ticket, this.listSelectedChair);
            if (response.getSuccess() == false) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Thông báo lỗi", JOptionPane.WARNING_MESSAGE);
                return;
            }
            ConfirmTicket confirmTicket = new ConfirmTicket(this, response.getData(), this.calendar_combobox.getSelectedItem().toString(), this.movie_combobox.getSelectedItem().toString(), this.priceChair.getText(), this.pricePopcorn.getText(), this.priceWater.getText(), this.listSelectedChair);
            confirmTicket.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Chưa chọn lịch chiếu", "Thông báo lỗi", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_clickPayment

    private void clickClear(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clickClear
        // TODO add your handling code here:
        this.clear();
    }//GEN-LAST:event_clickClear

    public void clear() {
        this.calendar_combobox.setSelectedIndex(0);
        this.name.setText("");
        this.email.setText("");
        this.chairs.setText("");
        this.priceChair.setText("0 đ");
        this.popcorn.setValue(0);
        this.water.setValue(0);
        this.listSelectedChair = new ArrayList<>();
        this.priceChairsMap = new HashMap<>();
        this.pricePopcornMap = new HashMap<>();
        this.priceWaterMap = new HashMap<>();
        this.remaining.setText("");
    }

    private void pushListPhim() {
        this.movie_combobox.removeAllItems();
        for (Map<String, String> item : this.listMovie) {
            this.movie_combobox.addItem(item.get("name"));
        }

        this.calendar_combobox.removeAllItems();
    }

    private void pushListCalendar() {
        this.calendar_combobox.removeAllItems();
        for (Map<String, String> item : this.listCalendar) {
            this.calendar_combobox.addItem(item.get("time"));
        }
    }

    private void showChooseChairs(List<String> listChairsBought) {
        this.frameChooseChairs.setLayout(new GridLayout(8, 10, 5, 10));
        this.frameChooseChairs.removeAll();
        for (char row = 'A'; row <= 'H'; row++) {
            for (int col = 1; col <= 10; col++) {
                String idChair = row + String.valueOf(col);
                JButton button = new JButton(idChair);
                if (listChairsBought.contains(idChair)) {
                    button.setBackground(Color.red);
                    button.setForeground(Color.black);
                } else {
                    button.setBackground(Color.green);
                    button.setForeground(Color.white);
                }
                button.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        if (listSelectedChair.contains(idChair)) {
                            button.setBackground(Color.green);
                            button.setForeground(Color.white);
                            listSelectedChair.remove(idChair);
                        } else if (!listChairsBought.contains(idChair)) {
                            button.setBackground(Color.blue);
                            button.setForeground(Color.black);
                            listSelectedChair.add(idChair);
                            Collections.sort(listSelectedChair);
                        }
                        chairs.setText(String.join(", ", listSelectedChair));
                    }
                });
                this.frameChooseChairs.add(button);
            }
        }
        this.frameChooseChairs.revalidate();
        this.frameChooseChairs.repaint();
        this.visiableNote(true);
    }

    private void visiableNote(boolean bool) {
        this.note1.setVisible(bool);
        this.note2.setVisible(bool);
        this.note3.setVisible(bool);
    }

    private void clearChooseChairs() {
        frameChooseChairs.removeAll();
        frameChooseChairs.revalidate();
        frameChooseChairs.repaint();
        this.visiableNote(false);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuyTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuyTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuyTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuyTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuyTicket(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> calendar_combobox;
    private javax.swing.JTextField chairs;
    private javax.swing.JButton chooseChair;
    private javax.swing.JButton clear;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextField email;
    private javax.swing.JPanel frameChooseChairs;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JComboBox<String> movie_combobox;
    private javax.swing.JTextField name;
    private javax.swing.JButton note1;
    private javax.swing.JButton note2;
    private javax.swing.JButton note3;
    private javax.swing.JButton payment;
    private javax.swing.JSpinner popcorn;
    private javax.swing.JLabel priceChair;
    private javax.swing.JLabel pricePopcorn;
    private javax.swing.JLabel priceWater;
    private javax.swing.JLabel remaining;
    private javax.swing.JSpinner water;
    // End of variables declaration//GEN-END:variables
}
